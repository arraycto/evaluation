<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.tusdasa.evaluation.dao.ThirdKpiMapper">
    <resultMap id="BaseResultMap" type="net.tusdasa.evaluation.entity.ThirdKpi">
        <id column="third_kpi_id" jdbcType="INTEGER" property="thirdKpiId"/>
        <result column="second_kpi_id" jdbcType="INTEGER" property="secondKpiId"/>
        <result column="third_kpi_content" jdbcType="VARCHAR" property="thirdKpiContent"/>
        <result column="calculation_rule_id" jdbcType="INTEGER" property="calculationRuleId"/>
    </resultMap>
    <sql id="Base_Column_List">
        third_kpi_id, second_kpi_id, third_kpi_content, calculation_rule_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
        where third_kpi_id = #{thirdKpiId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from `t_third_kpi`
        where third_kpi_id = #{thirdKpiId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="net.tusdasa.evaluation.entity.ThirdKpi">
        insert into `t_third_kpi` (third_kpi_id, second_kpi_id, third_kpi_content,
                                   calculation_rule_id)
        values (#{thirdKpiId,jdbcType=INTEGER}, #{secondKpiId,jdbcType=INTEGER}, #{thirdKpiContent,jdbcType=VARCHAR},
                #{calculationRuleId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="net.tusdasa.evaluation.entity.ThirdKpi">
        insert into `t_third_kpi`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="thirdKpiId != null">
                third_kpi_id,
            </if>
            <if test="secondKpiId != null">
                second_kpi_id,
            </if>
            <if test="thirdKpiContent != null">
                third_kpi_content,
            </if>
            <if test="calculationRuleId != null">
                calculation_rule_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="thirdKpiId != null">
                #{thirdKpiId,jdbcType=INTEGER},
            </if>
            <if test="secondKpiId != null">
                #{secondKpiId,jdbcType=INTEGER},
            </if>
            <if test="thirdKpiContent != null">
                #{thirdKpiContent,jdbcType=VARCHAR},
            </if>
            <if test="calculationRuleId != null">
                #{calculationRuleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="net.tusdasa.evaluation.entity.ThirdKpi">
        update `t_third_kpi`
        <set>
            <if test="secondKpiId != null">
                second_kpi_id = #{secondKpiId,jdbcType=INTEGER},
            </if>
            <if test="thirdKpiContent != null">
                third_kpi_content = #{thirdKpiContent,jdbcType=VARCHAR},
            </if>
            <if test="calculationRuleId != null">
                calculation_rule_id = #{calculationRuleId,jdbcType=INTEGER},
            </if>
        </set>
        where third_kpi_id = #{thirdKpiId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.tusdasa.evaluation.entity.ThirdKpi">
        update `t_third_kpi`
        set second_kpi_id       = #{secondKpiId,jdbcType=INTEGER},
            third_kpi_content   = #{thirdKpiContent,jdbcType=VARCHAR},
            calculation_rule_id = #{calculationRuleId,jdbcType=INTEGER}
        where third_kpi_id = #{thirdKpiId,jdbcType=INTEGER}
    </update>
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
    </select>
    <select id="findAllBySecondKpiId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
        where second_kpi_id = #{secondKpiId,jdbcType=INTEGER}
    </select>
    <select id="findAllBySecondKpiIdAndThirdKpiIds" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
        where second_kpi_id = #{secondKpiId,jdbcType=INTEGER} and third_kpi_id in
        <foreach collection="thirdKpiIds" item="thirdKpiId" open="(" separator="," close=")">
            #{thirdKpiId,jdbcType=INTEGER}
        </foreach>
    </select>
    <select id="findAllBySecondKpiIdsAndThirdKpiIds" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
        where second_kpi_id in
        <foreach collection="secondKpiIds" item="secondKpiId" open="(" separator="," close=")">
            #{secondKpiId,jdbcType=INTEGER}
        </foreach>
        and third_kpi_id in
        <foreach collection="thirdKpiIds" item="thirdKpiId" open="(" separator="," close=")">
            #{thirdKpiId,jdbcType=INTEGER}
        </foreach>
    </select>
    <select id="findAllBySecondKpiIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_third_kpi`
        where second_kpi_id in
        <foreach collection="secondKpiIds" item="secondKpiId" open="(" separator="," close=")">
            #{secondKpiId,jdbcType=INTEGER}
        </foreach>
    </select>
</mapper>